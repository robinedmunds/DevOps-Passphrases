import { useEffect, useState } from "react"
import type { NextPage } from "next"
import Head from "next/head"
import axios from "axios"
import Container from "@mui/material/Container"
import Stack from "@mui/material/Stack"
import Button from "@mui/material/Button"
import type { PhraseObj } from "../interfaces"
import Phrases from "../components/phrases"
import Dropdowns from "../components/dropdowns"

const Home: NextPage = () => {
  const [options, setOptions] = useState({
    phraseCount: 5,
    wordCount: 3,
    separator: encodeURIComponent(" "),
    wordlist: "eff_short_wordlist_1.txt"
  })
  const [apiURL, setApiUrl] = useState("//docker.local:4444/diceware/?format=json"
      + `&phrase_count=${options.phraseCount}`
      + `&word_count=${options.wordCount}`
      + `&separator=${options.separator}`
      + `&wordlist=${options.wordlist}`)
  const [isLoading, setIsLoading] = useState(true)
  const [phrases, setPhrases] = useState([])

  const fetchPhrases = () => {
    setApiUrl("//docker.local:4444/diceware/?format=json"
      + `&phrase_count=${options.phraseCount}`
      + `&word_count=${options.wordCount}`
      + `&separator=${options.separator}`
      + `&wordlist=${options.wordlist}`)

    axios.get(apiURL)
      .then(res => {
        setPhrases(res.data.phrases.phrases.map((o: PhraseObj) => o.phrase))
        setIsLoading(false)
      })
  }

  useEffect(() => {
    fetchPhrases()
  }, [options, apiURL])

  const renderPhrases = () => {
    if (isLoading) return <p>Loading...</p>
    return <Phrases phrases={phrases} />
  }

  return (
    <>
      <Head>
        <title>passphrases</title>
        <meta name="description" content="Generated by create next app" />
      </Head>

      <Container>
        <h1>Passphrases</h1>
        <h2>Generate strong, memorable and easy-to-type passphrases.</h2>

        <Stack spacing={2} direction="row">
          <Button onClick={() => {fetchPhrases()}} variant="contained">Generate</Button>
        </Stack>

        <Stack spacing={2} direction="row">
          <Dropdowns options={options} setOptions={setOptions} />
        </Stack>
          {renderPhrases()}
          <a href={apiURL}>{apiURL}</a>
      </Container>
    </>
  )
}

export default Home
